// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-08-28 16:05:15.0352901 +0300 MSK m=+0.096000301

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/azure/members/{memberId}/workItems/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Azure"
                ],
                "summary": "Задачи определенного участника команды",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "memberId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Id",
                        "name": "projectId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team Id",
                        "name": "teamId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Iteration Name",
                        "name": "iteration",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.WorkItem"
                            }
                        }
                    },
                    "400": {
                        "description": "When user has not provided projectId or teamId parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "When failed to receive data from Azure",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/azure/projects/list": {
            "get": {
                "description": "Возвращает список проектов организации",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Azure"
                ],
                "summary": "Список проектов",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Project"
                            }
                        }
                    },
                    "500": {
                        "description": "When failed to receive data from Azure",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/azure/teams/iterations/list": {
            "get": {
                "description": "Возвращает список спринтов команды",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Azure"
                ],
                "summary": "Список спринтов команды",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project Id",
                        "name": "projectId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team Id",
                        "name": "teamId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Iteration"
                            }
                        }
                    },
                    "400": {
                        "description": "When user has not provided projectId or teamId parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "When failed to receive data from Azure",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/azure/teams/list": {
            "get": {
                "description": "Возвращает список команд проекта",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Azure"
                ],
                "summary": "Список команд",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project Id",
                        "name": "projectId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Team"
                            }
                        }
                    },
                    "400": {
                        "description": "When user has not provided projectId parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "When failed to receive data from Azure",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/azure/teams/members/list": {
            "get": {
                "description": "Возвращает список участников команды проекта",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Azure"
                ],
                "summary": "Список участников команды",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project Id",
                        "name": "projectId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team Id",
                        "name": "teamId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Member"
                            }
                        }
                    },
                    "400": {
                        "description": "When user has not provided projectId or teamId parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "When failed to receive data from Azure",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "status bad request"
                },
                "status_code": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "models.Iteration": {
            "type": "object",
            "properties": {
                "finishDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "timeFrame": {
                    "type": "string"
                }
            }
        },
        "models.Member": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Project": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Team": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.WorkItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "rev": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1",
	Host:        "",
	BasePath:    "/api",
	Schemes:     []string{},
	Title:       "Databriz Meetings Api",
	Description: "Created by mobile developers",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
