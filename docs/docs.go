// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-08-26 17:10:42.9647772 +0300 MSK m=+0.097987301

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/azure/getMemberWorkItems/{projectId}/{teamId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Azure"
                ],
                "summary": "Задачи определенного участника команды",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project Id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team Id",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Iteration Name",
                        "name": "iteration",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/azure.WorkItemsResponse"
                        }
                    },
                    "400": {
                        "description": "When user has not provided projectId or teamId parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "When failed to receive data from Azure",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/azure/getProjectTeams/{projectId}": {
            "get": {
                "description": "Возвращает список команд проекта",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Azure"
                ],
                "summary": "Список команд",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project Id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/azure.TeamsList"
                        }
                    },
                    "400": {
                        "description": "When user has not provided projectId parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "When failed to receive data from Azure",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/azure/getProjects": {
            "get": {
                "description": "Возвращает список проектов организации",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Azure"
                ],
                "summary": "Список проектов",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/azure.ProjectsList"
                        }
                    },
                    "500": {
                        "description": "When failed to receive data from Azure",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/azure/getTeamIterations/{projectId}/{teamId}": {
            "get": {
                "description": "Возвращает список спринтов команды",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Azure"
                ],
                "summary": "Список спринтов команды",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project Id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team Id",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/azure.IterationsList"
                        }
                    },
                    "400": {
                        "description": "When user has not provided projectId or teamId parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "When failed to receive data from Azure",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/azure/getTeamMembers/{projectId}/{teamId}": {
            "get": {
                "description": "Возвращает список участников команды проекта",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Azure"
                ],
                "summary": "Список участников команды",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project Id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team Id",
                        "name": "teamId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MembersList"
                        }
                    },
                    "400": {
                        "description": "When user has not provided projectId or teamId parameter",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "When failed to receive data from Azure",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "azure.Fields": {
            "type": "object",
            "properties": {
                "System.Reason": {
                    "type": "string"
                },
                "System.Title": {
                    "type": "string"
                },
                "System.WorkItemType": {
                    "type": "string"
                }
            }
        },
        "azure.Iteration": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "object",
                    "$ref": "#/definitions/azure.IterationAttributes"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "azure.IterationAttributes": {
            "type": "object",
            "properties": {
                "finishDate": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "timeFrame": {
                    "type": "string"
                }
            }
        },
        "azure.IterationsList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/azure.Iteration"
                    }
                }
            }
        },
        "azure.Project": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "lastUpdateTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "revision": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "azure.ProjectsList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/azure.Project"
                    }
                }
            }
        },
        "azure.Team": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "identityUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "projectName": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "azure.TeamsList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/azure.Team"
                    }
                }
            }
        },
        "azure.WorkItem": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "$ref": "#/definitions/azure.Fields"
                },
                "id": {
                    "type": "integer"
                },
                "rev": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "azure.WorkItemsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/azure.WorkItem"
                    }
                }
            }
        },
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "status bad request"
                },
                "status_code": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "models.Member": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.MembersList": {
            "type": "object",
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Member"
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Databriz Meetings Api",
	Description: "Created by mobile developers",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
